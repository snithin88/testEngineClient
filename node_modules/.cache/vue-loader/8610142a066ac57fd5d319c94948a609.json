{"remainingRequest":"/Users/snithinnarayanan/testEngine/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/snithinnarayanan/testEngine/client/src/components/executor.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/snithinnarayanan/testEngine/client/src/components/executor.vue","mtime":1591992424710},{"path":"/Users/snithinnarayanan/testEngine/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/snithinnarayanan/testEngine/client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/snithinnarayanan/testEngine/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/snithinnarayanan/testEngine/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["executor.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyfile":"executor.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"container\" style=\"max-width:100%;padding:0px;height:100%;\">\n <!--  <leftNav></leftNav>   Left side Navigation -->\n    <div class=\"row\"\n    style=\"margin-left: 120px;border-left: 18px solid #f8f9fa;\">\n      <div class=\"col-sm-10\" style=\"padding-left: 30px;max-width: 1270px;border-right: 18px solid rgb(248, 249, 250);\">\n        <br>\n        <h4>Run Scenario</h4>\n        <hr>\n        <alert :message=message v-if=\"showMessage\"></alert>\n        <br><br>\n        <!-- Add Rules Form -->\n      <div class=\"addrules\">\n      <b-form @submit=\"submitSteps\" class=\"w-50\">\n\n      <div style=\"display: -webkit-inline-box;margin-right: 20px;\n        box-shadow: rgba(108, 117, 125, 0) 0px 0px 0px 5px inset;width:1200px;\n        padding: 30px 10px 30px 30px;min-height: 30px;margin-bottom: 30px;background-color:#94989624;\">\n        <b-form-group id=\"form-application-group\"\n                    label=\"Application:\"\n                    label-for=\"form-application-input\"\n                    style=\"margin-right: 20px;\">\n          <b-form-select v-on:change=\"selectAppOS()\" v-model=\"application\"\n            id=\"form-application-group1\" required>\n            <option value=\"\" selected>Please Select Application</option>\n          <!--  <option value=\"parkjockey_web\">ParkJockey Web</option>  -->\n            <option value=\"parkjockey_hangtag\">ParkJockey Hangtag</option>\n            <option value=\"tile\">Tile</option>\n            <option value=\"parkjockey_web\">ParkJockey Web</option>\n        </b-form-select>\n        </b-form-group>\n        <b-form-group id=\"form-os-group\"\n                    label=\"OS:\"\n                    label-for=\"form-os-input\"\n                    style=\"margin-right: 20px;\">\n          <b-form-select v-on:change=\"selectAppOS()\" v-model=\"os\"\n            id=\"form-os-group1\" required>\n            <option value=\"\" selected>Please Select OS</option>\n            <option value=\"android\">Android</option>\n            <option value=\"ios\">IOS</option>\n           <option value=\"website\">Website</option>\n        </b-form-select>\n        </b-form-group> \n      </div>\n\n        <div style=\"display: -webkit-inline-box;margin-right: 20px;\n        box-shadow: rgba(108, 117, 125, 0) 0px 0px 0px 5px inset;width:1200px;\n        padding: 30px 10px 30px 30px;min-height: 30px;margin-bottom: 30px;background-color:#94989624;\">\n        <b-form-group id=\"form-flowname-group\"\n                    label=\"Flow Name:\"\n                    label-for=\"form-flowname-input\"\n                    style=\"margin-right: 20px;\">\n          <b-form-select v-model=\"flowname\"\n            id=\"form-application-group1\" required>\n            <option value=\"\" :selected=\"true\">Please select Flowname</option>\n            <option v-for=\"(flow, index) in flownames\" :key=\"index\" :value=flow>\n            {{flow}}</option>\n            </b-form-select>\n        </b-form-group>\n        <b-button-group style=\"display:-webkit-inline-box;width:700px;\">\n          <b-button type=\"submit\" variant=\"primary\" @click=\"execscenario()\"\n          style=\"width: 150px;margin-right: 30px;margin-top:30px;\">Exec Scenario</b-button>\n        </b-button-group>\n        <div v-if=\"loading\">\n            <!-- here put a spinner or whatever you want to indicate that a request is in progress -->\n        </div>\n        </div>\n        \n               \n        \n      </b-form>\n      </div>\n\n      <div  id=\"response\" style=\"margin-right: 20px;\n        box-shadow: rgba(108, 117, 125, 0) 0px 0px 0px 5px inset;width:1200px;\n        padding: 30px 10px 30px 30px;min-height: 30px;margin-bottom: 30px;background-color:#94989624;\">\n        \n        </div>\n\n\n    </div>\n    \n    </div>\n    <div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport Alert from './Alert.vue';\nimport leftNav from './leftNav.vue';\nimport ClickConfirm from 'click-confirm';\n\nexport default {\n  data: () => ({\n    addScenarioForm : [\n      {\n      scenarioname: '',\n      enabled: '',\n      description: '',\n      testcaseid: '',\n      },\n    ],\n    addStepForm: [\n      {\n        screenname: '',\n        name: '',\n        action: '',\n        value: '',\n        condition: '',\n        value1: '',\n        value2: '',\n        expectstring: '',\n        conditionexec: '',\n        skipflag: '',\n      },  \n    ],\n    application: '',\n    os: '',\n    flowname: '',\n    message: '',\n    showMessage: false,\n    count: 0,\n    maincount: 0,\n    submitCount: 0,\n    scenarioCount: 0,\n    stepSaveArray : {},\n    finalarraydata: {},\n    flowarray: {},\n    flowarray1: {},\n    arrayA: {},\n    arrayB: {},\n    arrayC: {},\n    arrayD: {},\n    arrayE: {},\n    scnamesArray: {},\n    scnames: [],\n    names1: [],\n    values: [],\n    actionlist: [],\n    viewSceArray: '',\n    viewStepArray: '',\n    app: '',\n    osname: '',\n    flownames: '',\n    loading: false,\n  }),\n  components: {\n    alert: Alert,\n    leftNav: leftNav,\n    clickConfirm: ClickConfirm,\n  },\n  methods: {\n    selectFlownames () {\n      const path = 'http://localhost:5001/listscenarios';\n      this.loading = true\n      axios.get(path)\n        .then((res) => {\n          this.flownames = res.data;\n          console.log(this.flownames)\n        })\n        .catch((error) => {\n          console.error(error);\n        })\n        .finally(() => (this.loading = false));\n    },\n    execscenario() {\n     // console.log(flowname);\n      const path = 'http://localhost:5001/execFlow';\n      axios.get(path)\n        .then((res) => {\n          console.log(res.data);\n          document.getElementById('response').innerHTML = res.data;\n         // this.getOperands();\n         // this.$refs.editValueModal.show();\n        //  this.editValueForm.editValue = res.data.join();\n         // this.editOperandForm.name = index;\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n    },\n    selectAppOS (){\n      this.app = this.application;\n      this.osname = this.os;\n      console.log(this.app, this.osname);\n      if (this.app != '' && this.osname != '') {\n        this.scnamesArray = {};\n        this.scnames = [];\n        this.names1 = [];\n        this.values = [];\n        this.actionlist = [];\n        this.getScreenNames(this.app, this.osname);\n      }\n    },\n    viewScenario(num, val) {\n      let viewSceArray = '';\n      let viewStepArray = '';\n      Object.keys(this.arrayA).forEach((key) => {\n        if (key == val) {\n          this.viewStepArray = this.arrayA[key];\n        }\n      });\n      Object.keys(this.arrayB).forEach((key1) => {\n        if (key1 == num) {\n          this.viewSceArray = this.arrayB[key1];\n        }\n      });\n      this.$refs.viewModal.show();\n    },\n    // Fetch screen names\n    getScreenNames (appname, osdetail) {\n      let scnames = [];\n      let scnamesArray = {};\n      let jsonScreennameFile = appname + \".json\";\n      axios.get(jsonScreennameFile)\n        .then((response) => {\n          this.scnamesArray = response.data[appname][osdetail].screenname;\n          this.scnames = Object.keys(response.data[appname][osdetail].screenname);\n          this.values = Object.values(response.data[appname].value);\n          this.actionlist = Object.values(response.data[appname].Action);\n          console.log(this.scnames);\n          console.log(this.values);\n          console.log(this.actionlist);\n        })\n        .catch((error) => {\n          // eslint-disable-next-line\n          console.error(error);\n      });  \n    },\n    // Fetch names based on screen names\n    getNames(namescreen, id) {\n      console.log('aaa');\n      let names1 = [];\n      Object.keys(this.scnamesArray).forEach((key) => {\n        console.log(key, namescreen);\n        if (key == namescreen) {\n          this.$set(this.names1, id, this.scnamesArray[key]);\n          console.log(this.names1);\n        }\n      });\n    },\n    // Add more conditions\n    addscenario(mcount) {\n      event.preventDefault();\n      console.log(mcount);\n      if (mcount == 0) {\n        this.maincount = mcount + 1;\n      }\n      if (mcount >= 1 && this.submitCount == this.maincount) {\n        this.maincount = mcount + 1;\n        console.log(this.maincount);\n        this.addScenarioForm.push({\n          scenarioname: '',\n          enabled: '',\n          description: '',\n          testcaseid: '',\n        });\n      }\n      \n    },\n    addmorerules(val) {\n      event.preventDefault();\n      const newval = parseInt(val, 10);\n      const val1 = val + 1;\n      this.addStepForm.push({\n        screenname: '',\n        name: '',\n        action: '',\n        value: '',\n        condition: '',\n        value1: '',\n        value2: '',\n        expectstring: '',\n        conditionexec: '',\n        skipflag: '',\n      });\n      this.count = val1;\n    },\n    // remove conditions\n    removerules(val,remid) {\n      event.preventDefault();\n      const sub = '#remcond';\n      const ifrules = '#ifrules';\n      if (val === 1) {\n       // document.querySelector(ifrules).style.display = 'none';\n       // document.querySelector(sub).style.display = 'none';\n      }\n      this.addStepForm.splice(remid, 1);\n      const val1 = val - 1;\n      this.count = val1;\n    },\n    \n    // Initializing rules form\n    initForm() {\n      this.addStepForm[0].screenname = '';\n      this.addStepForm[0].name = '';\n      this.addStepForm[0].action = '';\n      this.addStepForm[0].value = '';\n      this.addStepForm[0].condition = '';\n      this.addStepForm[0].value1 = '';\n      this.addStepForm[0].value2 = '';\n      this.addStepForm[0].expectstring = '';\n      this.addStepForm[0].conditionexec = '';\n      this.addStepForm[0].skipflag = '';\n    },\n    submitSteps(evt) {\n      evt.preventDefault();\n      const steparray = this.addStepForm;\n      const scenarioArray = this.addScenarioForm;\n      const scenarioIndex = this.scenarioCount;\n      const stepCount = steparray.length;\n      console.log(steparray.length);\n      let formdata = {};\n      let arraydata = {};\n      let newarraydata = {};\n      \n      for (let i = 0; i < steparray.length; i += 1) {\n        let screenname1 = this.addStepForm[i].screenname;\n        let name1 = this.addStepForm[i].name;\n        let action1 = this.addStepForm[i].action;\n        let value1 = this.addStepForm[i].value;\n\n        formdata = {};\n        let steps = i+1;\n        formdata[steps] = {};\n        formdata[steps]['screen_name'] = screenname1;\n        formdata[steps]['name'] = name1;\n        formdata[steps]['action'] = action1;\n        formdata[steps]['value'] = value1;\n        if (action1 == 'expect') {\n          formdata[steps]['condition'] = this.addStepForm[i].condition;\n          formdata[steps]['value1'] = this.addStepForm[i].value1;\n          formdata[steps]['value2'] = this.addStepForm[i].value2;\n          formdata[steps]['expect_string'] = this.addStepForm[i].expectstring;\n        }\n        if (action1 != 'expect' && this.addStepForm[i].conditionexec == 'enabled') {\n          formdata[steps]['cond_exec'] = this.addStepForm[i].conditionexec;\n        }\n        if (action1 != 'expect' && this.addStepForm[i].skipflag == 'enabled') {\n          formdata[steps]['skipflag'] = this.addStepForm[i].skipflag;\n        }\n        arraydata = Object.assign(arraydata, formdata);\n        console.log(arraydata);\n      }\n      //console.log(this.addScenarioForm[scenarioIndex].scenarioname);\n      arraydata['stepcount'] = stepCount;\n      let scenarioname1 = this.addScenarioForm[scenarioIndex].scenarioname;\n      newarraydata[scenarioname1] = arraydata;\n      this.arrayA = Object.assign(this.arrayA, newarraydata);\n\n      let flowname1 = this.flowname;\n      let flowarrayIndex = this.maincount;\n      let flowarrayIndex1 = flowarrayIndex - 1;\n      let flowarray = {};\n     // flowarray[flowname1] = {};\n      flowarray[flowarrayIndex] = {};\n      flowarray[flowarrayIndex]['name'] = this.addScenarioForm[flowarrayIndex1].scenarioname;\n      flowarray[flowarrayIndex]['enabled'] = this.addScenarioForm[flowarrayIndex1].enabled;\n      flowarray[flowarrayIndex]['desc'] = this.addScenarioForm[flowarrayIndex1].description;\n      flowarray[flowarrayIndex]['testcase_id'] = this.addScenarioForm[flowarrayIndex1].testcaseid;\n\n      this.arrayB = Object.assign(this.arrayB, flowarray);\n      this.submitCount = this.submitCount + 1;\n      this.scenarioCount = this.scenarioCount + 1;\n\n      document.querySelector('#form-application-group1').disabled = true;\n      document.querySelector('#form-os-group1').disabled = true;\n      this.addStepForm.splice(1, stepCount);\n      /*\n      let j=0;\n      while (j < stepCount) {\n        this.addStepForm.splice(j, 1);\n        console.log(stepCount);\n        j=j+1;\n      }\n     for (let j = 1; j <= stepCount; j += 1) {\n        this.addStepForm.splice(j, 1);\n        console.log(stepCount);\n      } */\n      this.initForm();\n      console.log(arraydata);\n      console.log(newarraydata);\n      console.log(flowarray);\n      console.log(this.arrayA);\n      console.log(this.arrayB);\n    },\n    trimSpace(a) {\n      return a.split(' ').join('');\n    },\n    createFile() {\n      let completeArray = {};\n      let jsonFileName = this.trimSpace(this.flowname);\n      this.arrayB['scenario_count'] = this.scenarioCount;\n      this.arrayC[this.flowname] = this.arrayB;\n      this.arrayD['steps'] = this.arrayA;\n      this.arrayE['scenarios'] = this.arrayC;\n      completeArray = Object.assign(this.arrayE, this.arrayD);\n      completeArray['filename'] = jsonFileName;\n     // console.log(completeArray);\n      if (Object.keys(this.arrayC).length != 0 && Object.keys(this.arrayA).length !=0) {\n        const path = 'http://localhost:5001/createJson';\n        axios.post(path, completeArray)\n          .then((resp) => {\n            this.message = 'Scenario Added Successfully';\n            this.showMessage = true;\n            document.querySelector('#downloadLink').style.display = 'block';\n            document.querySelector('#downloadLink').innerHTML = resp.data;\n            window.scrollTo(0, 0);\n          })\n          .catch((error) => {\n            console.log(error);\n          });\n      }\n      else {\n          this.message = 'Error !!!';\n          this.showMessage = true;\n      }     \n    },\n    reloadPage(){\n      window.location.reload();\n    },\n  },\n  // city and operands are listed onload\n  created() {\n    this.selectFlownames();\n   // this.getScreenNames();\n  },\n};\n</script>\n<style src=\"vue-multiselect/dist/vue-multiselect.min.css\"></style>\n<style scoped>\n#tj-datetime-input {\n    height: 38px;\n    min-width: 176px;\n}\n</style>\n"]}]}