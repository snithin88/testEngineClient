{"remainingRequest":"/Users/snithinnarayanan/testEngine/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/snithinnarayanan/testEngine/client/src/components/configurator.vue?vue&type=template&id=b53eee76&scoped=true&","dependencies":[{"path":"/Users/snithinnarayanan/testEngine/client/src/components/configurator.vue","mtime":1592031835457},{"path":"/Users/snithinnarayanan/testEngine/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/snithinnarayanan/testEngine/client/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/snithinnarayanan/testEngine/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/snithinnarayanan/testEngine/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}