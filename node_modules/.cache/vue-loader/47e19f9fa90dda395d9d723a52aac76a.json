{"remainingRequest":"/Users/snithinnarayanan/Booking/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/snithinnarayanan/Booking/client/src/components/addoperand.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/snithinnarayanan/Booking/client/src/components/addoperand.vue","mtime":1583824365366},{"path":"/Users/snithinnarayanan/Booking/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/snithinnarayanan/Booking/client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/snithinnarayanan/Booking/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/snithinnarayanan/Booking/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7CmltcG9ydCBNdWx0aXNlbGVjdCBmcm9tICd2dWUtbXVsdGlzZWxlY3QnOwppbXBvcnQgQWxlcnQgZnJvbSAnLi9BbGVydC52dWUnOwppbXBvcnQgbGVmdE5hdiBmcm9tICcuL2xlZnROYXYudnVlJzsKCgpleHBvcnQgZGVmYXVsdCB7CiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGFkZE9wZXJhbmRGb3JtOiB7CiAgICAgICAgbmFtZTogJycsCiAgICAgICAgdHlwZTE6ICcnLAogICAgICAgIG9wZXJhdG9yOiBbXSwKICAgICAgfSwKICAgICAgZWRpdE9wZXJhbmRGb3JtOiB7CiAgICAgICAgbmFtZTogJycsCiAgICAgICAgdHlwZTogJycsCiAgICAgICAgb3BlcmF0b3I6IFtdLAogICAgICB9LAogICAgICBvcGVyYW5kczogW10sCiAgICAgIG9wdGlvbnM6IFsnaW4nLCAnZXF1YWxzJywgJ2dyZWF0ZXJ0aGFuJywgJ2dyZWF0ZXJ0aGFuIG9yIGVxdWxhdG8nLCAnbGVzc3RoYW4nLCAnbGVzc3RoYW4gb3IgZXF1YWx0bycsICdub3RlcXVhbHMnXSwKICAgICAgZnVuY3Rpb25saXN0OiBbJ2dldERheScsJ2dldEhvdXInLCdnZXREYXlvZndlZWsnLCdnZXREYXRlJywnZ2V0Q3VycmVudERhdGUnLCdjaGVja092ZXJuaWdodFBhcmtpbmcnLCdzdHJpbmcnXSwKICAgICAgbWVzc2FnZTogJycsCiAgICAgIHNob3dNZXNzYWdlOiBmYWxzZSwKICAgIH07CiAgfSwKICBjb21wb25lbnRzOiB7CiAgICBhbGVydDogQWxlcnQsCiAgICBsZWZ0TmF2OiBsZWZ0TmF2LAogICAgTXVsdGlzZWxlY3QsCiAgfSwKICBtZXRob2RzOiB7CiAgICAvLyBGZXRjaCBhbGwgdGhlIG9wZXJhbmRzIGZyb20gdGhlIHNlcnZlcgogICAgZ2V0T3BlcmFuZHMoKSB7CiAgICAgIGNvbnN0IHBhdGggPSAnaHR0cDovL2xvY2FsaG9zdDo1MDAwL2xpc3RvcGVyYW5kJzsKICAgICAgYXhpb3MuZ2V0KHBhdGgpCiAgICAgICAgLnRoZW4oKHJlcykgPT4gewogICAgICAgICAgdGhpcy5vcGVyYW5kcyA9IHJlcy5kYXRhOwogICAgICAgIH0pCiAgICAgICAgLmNhdGNoKChlcnJvcikgPT4gewogICAgICAgICAgY29uc29sZS5lcnJvcihlcnJvcik7CiAgICAgICAgfSk7CiAgICB9LAogICAgLy8gQWRkaW5nIGFuZCBlZGl0aW5nIG9wZXJhbmRzCiAgICBhZGRPcGVyYW5kKHBheWxvYWQpIHsKICAgICAgY29uc3QgcGF0aCA9ICdodHRwOi8vbG9jYWxob3N0OjUwMDAvYWRkb3BlcmFuZCc7CiAgICAgIGF4aW9zLnBvc3QocGF0aCwgcGF5bG9hZCkKICAgICAgICAudGhlbigoKSA9PiB7CiAgICAgICAgICB0aGlzLmdldE9wZXJhbmRzKCk7CiAgICAgICAgICB0aGlzLm1lc3NhZ2UgPSAnUHJpY2luZyBGYWN0b3IgYWRkZWQhJzsKICAgICAgICAgIHRoaXMuc2hvd01lc3NhZ2UgPSB0cnVlOwogICAgICAgIH0pCiAgICAgICAgLmNhdGNoKChlcnJvcikgPT4gewogICAgICAgICAgY29uc29sZS5sb2coZXJyb3IpOwogICAgICAgIH0pOwogICAgfSwKICAgIC8vIEluaXRpYWxpemluZyB0aGUgYWRkIG9wZXJhbmQgZm9ybQogICAgaW5pdEZvcm0oKSB7CiAgICAgIHRoaXMuYWRkT3BlcmFuZEZvcm0ubmFtZSA9ICcnOwogICAgICB0aGlzLmFkZE9wZXJhbmRGb3JtLnR5cGUxID0gJyc7CiAgICAgIHRoaXMuYWRkT3BlcmFuZEZvcm0ub3BlcmF0b3IgPSAnJzsKICAgIH0sCiAgICAvLyBTdWJtaXQgZnVuY3Rpb24gZm9yIGFkZGluZyBvcGVyYW5kcwogICAgb25TdWJtaXQoZXZ0KSB7CiAgICAgIGV2dC5wcmV2ZW50RGVmYXVsdCgpOwogICAgICB0aGlzLiRyZWZzLmFkZE9wZXJhbmRNb2RhbC5oaWRlKCk7CiAgICAgIGNvbnN0IG9wZXJhbmQgPSB0aGlzLmFkZE9wZXJhbmRGb3JtLm5hbWU7CiAgICAgIGNvbnN0IG9wZXJhbmRhcnJheSA9IHt9OwogICAgICBvcGVyYW5kYXJyYXlbb3BlcmFuZF0gPSB7fTsKICAgICAgb3BlcmFuZGFycmF5W29wZXJhbmRdWyd0eXBlJ10gPSB0aGlzLmFkZE9wZXJhbmRGb3JtLnR5cGUxOwogICAgICBvcGVyYW5kYXJyYXlbb3BlcmFuZF1bJ29wZXJhdG9yJ10gPSB0aGlzLmFkZE9wZXJhbmRGb3JtLm9wZXJhdG9yOwogICAgICBjb25zdCBwYXlsb2FkID0gb3BlcmFuZGFycmF5OwogICAgICB0aGlzLmFkZE9wZXJhbmQocGF5bG9hZCk7CiAgICAgIHRoaXMuaW5pdEZvcm0oKTsKICAgIH0sCiAgICAvLyBwb3B1cCBlZGl0IG9wZXJhbmQgZm9ybSB3aXRoIHZhbHVlcwogICAgZWRpdE9wZXJhbmQoaW5kZXgpIHsKICAgICAgY29uc3QgcGF0aCA9IGBodHRwOi8vbG9jYWxob3N0OjUwMDAvZWRpdG9wZXJhbmQvJHtpbmRleH1gOwogICAgICBheGlvcy5nZXQocGF0aCkKICAgICAgICAudGhlbigocmVzKSA9PiB7CiAgICAgICAgICB0aGlzLmdldE9wZXJhbmRzKCk7CiAgICAgICAgICB0aGlzLiRyZWZzLmVkaXRPcGVyYW5kTW9kYWwuc2hvdygpOwogICAgICAgICAgdGhpcy5lZGl0T3BlcmFuZEZvcm0gPSByZXMuZGF0YTsKICAgICAgICAgIHRoaXMuZWRpdE9wZXJhbmRGb3JtLm5hbWUgPSBpbmRleDsKICAgICAgICB9KQogICAgICAgIC5jYXRjaCgoZXJyb3IpID0+IHsKICAgICAgICAgIGNvbnNvbGUuZXJyb3IoZXJyb3IpOwogICAgICAgIH0pOwogICAgfSwKICAgIC8vIFVwZGF0ZSBmdW5jdGlvbiBmb3IgZWRkaXRpbmcgb3BlcmFuZHMKICAgIG9uVXBkYXRlKGV2dCkgewogICAgICBldnQucHJldmVudERlZmF1bHQoKTsKICAgICAgdGhpcy4kcmVmcy5lZGl0T3BlcmFuZE1vZGFsLmhpZGUoKTsKICAgICAgY29uc3Qgb3BlcmFuZCA9IHRoaXMuZWRpdE9wZXJhbmRGb3JtLm5hbWU7CiAgICAgIGNvbnN0IG9wZXJhbmRhcnJheSA9IHt9OwogICAgICBvcGVyYW5kYXJyYXlbb3BlcmFuZF0gPSB7fTsKICAgICAgb3BlcmFuZGFycmF5W29wZXJhbmRdWyd0eXBlJ10gPSB0aGlzLmVkaXRPcGVyYW5kRm9ybS50eXBlOwogICAgICBvcGVyYW5kYXJyYXlbb3BlcmFuZF1bJ29wZXJhdG9yJ10gPSB0aGlzLmVkaXRPcGVyYW5kRm9ybS5vcGVyYXRvcjsKICAgICAgY29uc3QgcGF5bG9hZCA9IG9wZXJhbmRhcnJheTsKICAgICAgdGhpcy5hZGRPcGVyYW5kKHBheWxvYWQpOwogICAgICB0aGlzLmluaXRGb3JtKCk7CiAgICB9LAogIH0sCiAgY3JlYXRlZCgpIHsKICAgIC8vIGxpc3QgYWxsIHRoZSBvcGVyYW5kcyBvbmxvYWQKICAgIHRoaXMuZ2V0T3BlcmFuZHMoKTsKICB9LAp9Owo="},{"version":3,"sources":["addoperand.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+IA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"addoperand.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"container\" style=\"max-width:100%;padding:0px;height:100%;\">\n<!--   <leftNav></leftNav>   Left side Navigation -->\n    <div class=\"row\"\n    style=\"margin-left: 280px;border-left: 18px solid #f8f9fa;height:100%\">\n      <div class=\"col-sm-10\" style=\"padding-left:30px;\">\n        <br>\n        <h4>Pricing Factor</h4>\n        <hr>\n        <alert :message=message v-if=\"showMessage\"></alert>\n        <button type=\"button\" class=\"btn btn-success btn-sm\"\n        v-b-modal.operand-modal>Add Operand</button>\n        <br><br>\n        <!-- List of Operands -->\n        <table class=\"table table-hover\">\n          <thead>\n            <tr>\n              <th scope=\"col\">Name</th>\n              <th scope=\"col\">List of Operator</th>\n              <th scope=\"col\">Type</th>\n              <th></th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr v-for=\"(operand, index) in operands\" :key=\"index\">\n              <td>{{ index }}</td>\n              <td >\n                <div  v-for=\"(operator1, index1) in operand.operator\" :key=\"index1\">\n                {{ operator1}}</div></td>\n              <td><div  v-for=\"(type2, index2) in operand.type\" :key=\"index2\">\n                {{ type2}}</div></td>\n              <td>\n              <div class=\"btn-group\" role=\"group\">\n                  <button\n                          type=\"button\"\n                          class=\"btn btn-warning btn-sm\"\n                          v-b-modal.edit-operand-modal\n                          style=\"margin-right:10px;\"\n                          @click=\"editOperand(index)\">\n                      Update\n                  </button> <button\n                          type=\"button\"\n                          class=\"btn btn-danger btn-sm\">\n                      Delete\n                  </button>\n                </div>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    <b-modal ref=\"addOperandModal\"       \n            id=\"operand-modal\"\n            title=\"Add a new operand\"\n            hide-footer>\n      <!-- Add Operand Form  -->      \n      <b-form @submit=\"onSubmit\" class=\"w-50\">\n      <b-form-group id=\"form-name-group\"\n                    label=\"Name:\"\n                    label-for=\"form-name-input1\">\n          <b-form-input id=\"form-name-input1\"\n                        type=\"text\"\n                        v-model=\"addOperandForm.name\"\n                        required\n                        placeholder=\"Enter name\">\n          </b-form-input>\n        </b-form-group>\n         <b-form-group id=\"form-type1-input\"\n                    label=\"Function:\"\n                    label-for=\"form-type1-input\"\n                    style=\"margin-right: 20px;width:300px;\">\n          <multiselect\n            v-model=\"addOperandForm.type1\"\n            :options=\"functionlist\"\n            :multiple=\"true\"\n            style=\"max-height: 30px;width:380px;\">\n          </multiselect>\n        </b-form-group>\n        <b-form-group id=\"form-operator-group\"\n                    label=\"operator:\"\n                    label-for=\"form-operator-input\"\n                    style=\"margin-right: 20px;width:300px;\">\n          <multiselect\n            v-model=\"addOperandForm.operator\"\n            :options=\"options\"\n            :multiple=\"true\"\n            style=\"max-height: 30px;width:380px;\">\n          </multiselect>\n        </b-form-group>\n        <b-button-group>\n          <b-button type=\"submit\" variant=\"primary\">Submit</b-button>\n        </b-button-group>\n      </b-form>\n    </b-modal>  \n    <b-modal ref=\"editOperandModal\"\n            id=\"edit-operand-modal\"\n            title=\"Edit operand\"\n            hide-footer>\n      <!-- Edit Operand Form  -->      \n      <b-form @submit=\"onUpdate\" class=\"w-50\">\n      <b-form-group id=\"form-name-group\"\n                    label=\"Name:\"\n                    label-for=\"form-name-input\">\n          <b-form-input id=\"form-name-input\"\n                        type=\"text\"\n                        v-model=\"editOperandForm.name\"\n                        required\n                        disabled\n                        placeholder=\"Enter name\">\n          </b-form-input>\n        </b-form-group>\n        <b-form-group id=\"form-type1-group\"\n                    label=\"Function:\"\n                    label-for=\"form-type1-input\"\n                    style=\"margin-right: 20px;width:300px;\">\n          <multiselect\n            v-model=\"editOperandForm.type\"\n            :options=\"functionlist\"\n            :multiple=\"true\"\n            style=\"max-height: 30px;width:380px;\">\n          </multiselect>\n        </b-form-group>\n        <b-form-group id=\"form-operator-group\"\n                    label=\"operator:\"\n                    label-for=\"form-operator-input\"\n                    style=\"margin-right: 20px;width:300px;\">\n          <multiselect\n            v-model=\"editOperandForm.operator\"\n            :options=\"options\"\n            :multiple=\"true\"\n            style=\"max-height: 30px;width:380px;\">\n          </multiselect>\n        </b-form-group>\n        <b-button-group>\n          <b-button type=\"submit\" variant=\"primary\">Submit</b-button>\n        </b-button-group>\n      </b-form>\n    </b-modal>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport Multiselect from 'vue-multiselect';\nimport Alert from './Alert.vue';\nimport leftNav from './leftNav.vue';\n\n\nexport default {\n  data() {\n    return {\n      addOperandForm: {\n        name: '',\n        type1: '',\n        operator: [],\n      },\n      editOperandForm: {\n        name: '',\n        type: '',\n        operator: [],\n      },\n      operands: [],\n      options: ['in', 'equals', 'greaterthan', 'greaterthan or equlato', 'lessthan', 'lessthan or equalto', 'notequals'],\n      functionlist: ['getDay','getHour','getDayofweek','getDate','getCurrentDate','checkOvernightParking','string'],\n      message: '',\n      showMessage: false,\n    };\n  },\n  components: {\n    alert: Alert,\n    leftNav: leftNav,\n    Multiselect,\n  },\n  methods: {\n    // Fetch all the operands from the server\n    getOperands() {\n      const path = 'http://localhost:5000/listoperand';\n      axios.get(path)\n        .then((res) => {\n          this.operands = res.data;\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n    },\n    // Adding and editing operands\n    addOperand(payload) {\n      const path = 'http://localhost:5000/addoperand';\n      axios.post(path, payload)\n        .then(() => {\n          this.getOperands();\n          this.message = 'Pricing Factor added!';\n          this.showMessage = true;\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n    },\n    // Initializing the add operand form\n    initForm() {\n      this.addOperandForm.name = '';\n      this.addOperandForm.type1 = '';\n      this.addOperandForm.operator = '';\n    },\n    // Submit function for adding operands\n    onSubmit(evt) {\n      evt.preventDefault();\n      this.$refs.addOperandModal.hide();\n      const operand = this.addOperandForm.name;\n      const operandarray = {};\n      operandarray[operand] = {};\n      operandarray[operand]['type'] = this.addOperandForm.type1;\n      operandarray[operand]['operator'] = this.addOperandForm.operator;\n      const payload = operandarray;\n      this.addOperand(payload);\n      this.initForm();\n    },\n    // popup edit operand form with values\n    editOperand(index) {\n      const path = `http://localhost:5000/editoperand/${index}`;\n      axios.get(path)\n        .then((res) => {\n          this.getOperands();\n          this.$refs.editOperandModal.show();\n          this.editOperandForm = res.data;\n          this.editOperandForm.name = index;\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n    },\n    // Update function for edditing operands\n    onUpdate(evt) {\n      evt.preventDefault();\n      this.$refs.editOperandModal.hide();\n      const operand = this.editOperandForm.name;\n      const operandarray = {};\n      operandarray[operand] = {};\n      operandarray[operand]['type'] = this.editOperandForm.type;\n      operandarray[operand]['operator'] = this.editOperandForm.operator;\n      const payload = operandarray;\n      this.addOperand(payload);\n      this.initForm();\n    },\n  },\n  created() {\n    // list all the operands onload\n    this.getOperands();\n  },\n};\n</script>\n"]}]}