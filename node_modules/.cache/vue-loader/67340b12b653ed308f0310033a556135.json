{"remainingRequest":"/Users/snithinnarayanan/testEngine/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/snithinnarayanan/testEngine/client/src/components/scenario.vue?vue&type=style&index=1&id=3c2410c0&scoped=true&lang=css&","dependencies":[{"path":"/Users/snithinnarayanan/testEngine/client/src/components/scenario.vue","mtime":1584788765392},{"path":"/Users/snithinnarayanan/testEngine/client/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/snithinnarayanan/testEngine/client/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/snithinnarayanan/testEngine/client/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/snithinnarayanan/testEngine/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/snithinnarayanan/testEngine/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCiN0ai1kYXRldGltZS1pbnB1dCB7CiAgICBoZWlnaHQ6IDM4cHg7CiAgICBtaW4td2lkdGg6IDE3NnB4Owp9Cg=="},{"version":3,"sources":["scenario.vue"],"names":[],"mappingsgiBA;AACA;AACA;AACA","file":"scenario.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"container\" style=\"max-width:100%;padding:0px;height:100%;\">\n <!--  <leftNav></leftNav>   Left side Navigation -->\n    <div class=\"row\"\n    style=\"margin-left: 220px;border-left: 18px solid #f8f9fa;\">\n      <div class=\"col-sm-10\" style=\"padding-left: 30px;max-width: 1130px;border-right: 18px solid rgb(248, 249, 250);\">\n        <br>\n        <h4>Scenario Generator</h4>\n        <hr>\n        <alert :message=message v-if=\"showMessage\"></alert>\n        <br><br>\n        <!-- Add Rules Form -->\n      <div class=\"addrules\">\n      <b-form @submit=\"submitSteps\" class=\"w-50\">\n         <div style=\"display: -webkit-inline-box;margin-right: 20px;\n        box-shadow: rgba(108, 117, 125, 0) 0px 0px 0px 5px inset;width:1050px;\n        padding: 30px 10px 30px 30px;min-height: 30px;margin-bottom: 30px;background-color:#94989624;\">\n        <b-form-group id=\"form-flowname-group\"\n                    label=\"Flow Name:\"\n                    label-for=\"form-flowname-input\"\n                    style=\"margin-right: 20px;\">\n          <b-form-input id=\"form-flowname-input\"\n                        type=\"text\"\n                        v-model=\"flowname\"\n                        placeholder=\"Enter Flow name\"\n                        required>\n          </b-form-input>\n        </b-form-group>\n        <b-button-group style=\"display:-webkit-inline-box;width:700px;\">\n          <b-button type=\"submit\" variant=\"primary\" @click=\"addscenario(maincount)\"\n          style=\"width: 150px;margin-right: 30px;margin-top:30px;\">Add Scenario</b-button>\n        </b-button-group>  \n        </div>\n        <div v-if=\"maincount > 0\">\n        <div  style=\"margin-right: 20px;\n        box-shadow: rgba(108, 117, 125, 0) 0px 0px 0px 5px inset;width:1050px;\n        padding: 30px 10px 30px 30px;min-height: 30px;margin-bottom: 30px;background-color:#94989624;\">\n        <div v-for=\"(scenario, index1) in addScenarioForm\" :key=\"index1\" style=\"display: -webkit-box;\">\n        <b-form-group id=\"form-scenarioname-group\"\n                    label=\"Scenario Name:\"\n                    label-for=\"form-scenarioname-input\"\n                    style=\"margin-right: 20px;\">\n          <b-form-input id=\"form-scenarioname-input\"\n                        type=\"text\"\n                        v-model=\"scenario.scenarioname\" :name=\"`addScenarioForm[${index1}][scenarioname]`\"\n                        placeholder=\"Enter Scenario Name\"\n                        required>\n          </b-form-input>\n        </b-form-group>\n        <b-form-group label=\"Enabled:\"\n                      label-for=\"form-enabled-input\"\n                      style=\"margin-right: 20px;\">\n            <b-form-select v-model=\"scenario.enabled\"\n            id=\"form-enabled-group\"\n            :name=\"`addScenarioForm[${index1}][enabled]`\" >\n            <option value=\"\" selected>Please select....</option>\n            <option value=\"TRUE\">True</option>\n            <option value=\"FALSE\">False</option>\n        </b-form-select>\n        </b-form-group>\n        <b-form-group id=\"form-description-group\"\n                    label=\"Description:\"\n                    label-for=\"form-description-input\"\n                    style=\"margin-right: 20px;\">\n          <b-form-input id=\"form-description-input\"\n                        type=\"text\"\n                        v-model=\"scenario.description\" :name=\"`addScenarioForm[${index1}][description]`\"\n                        placeholder=\"Enter Description\"\n                        >\n          </b-form-input>\n        </b-form-group>\n        <b-form-group id=\"form-testcaseid-group\"\n                    label=\"Testcase ID:\"\n                    label-for=\"form-testcaseid-input\"\n                    style=\"margin-right: 20px;\">\n          <b-form-input id=\"form-testcaseid-input\"\n                        type=\"text\"\n                        v-model=\"scenario.testcaseid\" :name=\"`addScenarioForm[${index1}][testcaseid]`\"\n                        placeholder=\"Enter testcase id\"\n                        >\n          </b-form-input>\n        </b-form-group>\n        <div v-if=\"submitCount > index1\" style=\"margin-top: 30px;color: green;\"><span>Scenario added</span></div>\n        </div>\n        </div>\n        <!-- Conditions Form -->\n        <div\n        style=\"margin-right: 20px;box-shadow: rgba(108, 117, 125, 0) 0px 0px 0px 5px inset;\n        width: 1050px;background-color:#94989624;\n        padding: 30px 10px 30px 30px;min-height: 30px;margin-bottom: 30px;\">\n        <div v-for=\"(rules, index) in addStepForm\" :key=\"index\">\n        <div style=\"display: -webkit-box;\" >\n        <div></div><h6 style=\"padding-top: 35px;margin-right:15px;\">Step : {{ index+1 }}</h6>\n        <b-form-group id=\"form-screenname-group\"\n                      label=\"Screen Name:\"\n                      label-for=\"form-screenname-input\"\n                      style=\"margin-right: 20px;\">\n            <b-form-select v-on:change=\"getNames(rules.screenname, index)\" v-model=\"rules.screenname\" \n            :name=\"`addStepForm[${index}][screenname]`\" id=\"form-screenname-input\" required>\n            <option value=\"\" selected>Please select screen name</option>\n            <option v-for=\"(scname, index2) in scnames\" :key=\"index2\" :value=scname>\n            {{scname}}</option>\n            </b-form-select>\n        </b-form-group>    \n        <b-form-group id=\"form-name-group\"\n                      label=\"Name:\"\n                      label-for=\"form-name-input\"\n                      style=\"margin-right: 20px;\">\n          <!--  <b-form-input id=\"form-name-input\"\n                          type=\"text\"\n                          v-model=\"rules.name\" :name=\"`addStepForm[${index}][name]`\"\n                          placeholder=\"Enter name\">\n            </b-form-input>  -->\n                <b-form-select v-model=\"rules.name\" :name=\"`addStepForm[${index}][name]`\"\n                id=\"form-name-input\" >\n                  <option value=\"\" selected>Please select name</option>\n                  <option v-for=\"(name1, index3) in names1[index]\" :key=\"index3\" :value=name1>\n                  {{name1}}</option>\n               </b-form-select>\n          </b-form-group>\n        <b-form-group id=\"form-action-group\"\n                      label=\"Action:\"\n                      label-for=\"form-action-input\"\n                      style=\"margin-right: 20px;\">\n            <b-form-select v-model=\"rules.action\" :name=\"`addStepForm[${index}][action]`\"\n            id=\"form-action-input\">\n            <option value=\"\" selected>Please select action </option>\n            <option value=\"button\">Button</option>\n            <option value=\"text_input\">Text Input</option>\n             <option value=\"securetext_input\">Secure Text Input</option>\n             <option value=\"expect\">Expect</option>\n            </b-form-select>\n          </b-form-group>\n        <b-form-group id=\"form-value-group\"\n                      label=\"Value:\"\n                      label-for=\"form-value-input\"\n                      style=\"margin-right: 20px;\">\n            <b-form-input id=\"form-value-input\"\n                          type=\"text\"\n                          v-model=\"rules.value\" :name=\"`addStepForm[${index}][value]`\"\n                          placeholder=\"Enter value\">\n            </b-form-input>\n          </b-form-group>\n        \n               \n        <div v-if=\"index == 0\"> \n        <button @click=\"addmorerules(count)\" variant=\"none\"\n          style=\"width: 30px;padding-top:35px;margin-right: 10px;background:none;border:none;\"><img src=\"plus.jpg\" alt=\"+\" style=\"width:20px;\"></button>\n        </div>\n        <div v-if=\"count > 0 && index > 0\">  \n        <button @click=\"removerules(count,index)\" variant=\"none\"\n          style=\"width: 30px;padding-top:35px;margin-right: 30px;background:none;border:none;\"><img src=\"minus.png\" alt=\"+\" style=\"width:24px;\"></button>\n        </div>  \n        </div>\n        <div v-if=\"rules.action == 'expect'\" style=\"display: -webkit-inline-box;margin-left: 70px;\"> \n        <b-form-group id=\"form-condition-group\"\n                      label=\"Condition:\"\n                      label-for=\"form-condition-input\"\n                      style=\"margin-right: 20px;\">\n            <b-form-select v-model=\"rules.condition\" :name=\"`addStepForm[${index}][condition]`\"\n            id=\"form-condition-input\">\n            <option value=\"\" selected>Please select condition </option>\n            <option value=\"isDisplayed\">Is Displayed</option>\n            </b-form-select>\n          </b-form-group>\n        <b-form-group id=\"form-value-group\"\n                      label=\"Value 1:\"\n                      label-for=\"form-value1-input\"\n                      style=\"margin-right: 20px;\">\n            <b-form-input id=\"form-value1-input\"\n                          type=\"text\"\n                          v-model=\"rules.value1\" :name=\"`addStepForm[${index}][value1]`\"\n                          placeholder=\"Enter value1\">\n            </b-form-input>\n          </b-form-group>\n        <b-form-group id=\"form-value2-group\"\n                      label=\"Value 2:\"\n                      label-for=\"form-value2-input\"\n                      style=\"margin-right: 20px;\">\n            <b-form-input id=\"form-value2-input\"\n                          type=\"text\"\n                          v-model=\"rules.value2\" :name=\"`addStepForm[${index}][value2]`\"\n                          placeholder=\"Enter value2\">\n            </b-form-input>\n          </b-form-group>\n        <b-form-group id=\"form-expectstring-group\"\n                      label=\"Expect String:\"\n                      label-for=\"form-expectstring-input\"\n                      style=\"margin-right: 20px;\">\n            <b-form-input id=\"form-expectstring-input\"\n                          type=\"text\"\n                          v-model=\"rules.expectstring\" :name=\"`addStepForm[${index}][expectstring]`\"\n                          placeholder=\"Enter expectstring\">\n            </b-form-input>\n          </b-form-group>\n        </div>\n\n        <div v-if=\"rules.action != 'expect'\" style=\"display: -webkit-inline-box;margin-left: 70px;\"> \n        <b-form-group id=\"form-conditionexec-group\"\n                      label=\"Condition Exec:\"\n                      label-for=\"form-conditionexec-input\"\n                      style=\"margin-right: 20px;\">\n            <b-form-select v-model=\"rules.conditionexec\" :name=\"`addStepForm[${index}][conditionexec]`\"\n            id=\"form-conditionexec-input\">\n            <option value=\"\" selected>Please select cond_exec </option>\n            <option value=\"enabled\">Enabled</option>\n            <option value=\"disabled\">Disabled</option>\n            </b-form-select>\n          </b-form-group>\n        <b-form-group id=\"form-skipflag-group\"\n                      label=\"Skip Flag:\"\n                      label-for=\"form-skipflag-input\"\n                      style=\"margin-right: 20px;\">\n            <b-form-select v-model=\"rules.skipflag\" :name=\"`addStepForm[${index}][skipflag]`\"\n            id=\"form-skipflag-group\">\n            <option value=\"\" selected=\"selected\">Please select skipflag </option>\n            <option value=\"enabled\">Enabled</option>\n            <option value=\"disabled\">Disabled</option>\n            </b-form-select>\n          </b-form-group>  \n        </div> \n        </div>\n        <b-button-group style=\"display:-webkit-inline-box;width:700px;\">\n          <b-button variant=\"primary\" type=\"submit\"\n          style=\"width: 150px;margin-right: 30px;margin-top:30px;\">Submit Steps</b-button>\n        </b-button-group> \n        </div>\n        <b-button-group style=\"display:-webkit-inline-box;width:700px;\">\n          <b-button  variant=\"primary\" @click=\"createFile()\"\n          style=\"width: 150px;margin-right: 30px;margin-top:30px;\">Create File</b-button>\n          <b-button  variant=\"primary\" @click=\"reloadPage()\"\n          style=\"width: 150px;margin-right: 30px;margin-top:30px;\">Reset</b-button>\n        </b-button-group>\n      </div>\n      </b-form>\n      </div>\n      <div style = \"display:none;margin-top: 15px;\" id=\"downloadLink\"></div>\n    <br><br>\n    <hr><br><br>\n    </div>\n    <div style=\"width: 265px;margin-left: 20px;margin-top: 100px;\">\n      <div>\n        <!-- Single button triggers two \"<b-collapse>\" components -->\n        <b-button class=\"btn btn-link\" v-b-toggle.collapse-a.collapse-b variant=\"light\" style=\"cursor:help\">Help ?</b-button>\n\n        <!-- Elements to collapse -->\n        <b-collapse id=\"collapse-a\" class=\"mt-2\" style=\"background: aliceblue;padding-top:10px;padding-bottom: 10px;padding-right: 10px;\">\n          <span style=\"padding-left:10px;\">Instructions</span>\n          <span v-b-toggle.collapse-a.collapse-b style=\"padding-left:10px;float: right;padding-right: 10px;cursor:pointer\">Close[X]</span>\n          <ul style=\"list-style-position: outside;padding-top: 10px;\">\n          <li>Enter Flowname</li>\n          <li >Add Scenario Button : to enter a new scenario</li>\n          <li>Enter scenario details</li>\n          <li>Enter steps</li>\n          <li>Use + button to add more steps</li>\n          <li>Use - button to remove a step</li>\n          <li>Submit Steps Button : to save steps for that particular scenario</li>\n          <li>To Add new scenario, click Add Scenario Button</li>\n          <li>Follow above instructions to add steps and submit</li>\n          <li>Create File Button : To create file based on the scenarios added</li>\n          <li>Reset Button : To reset the page</li>\n          <li>Download File Link : To download the file created file</li>\n          </ul>\n          <span style=\"padding-left:10px;\">Notes</span>\n          <ul style=\"list-style-position: outside;padding-top: 10px;\">\n          <li>Form validations are not included in this version </li>\n          <li >A new scenario can be added only after submitting the previous scenario</li>\n          <li>Edit, Delete functionalities for an added scenario is not included</li>\n          <li>Ensure all scenarios are added before clicking the Create File Button</li>\n          </ul>\n          <div></div>\n        </b-collapse>\n      </div>\n    </div>\n    </div>\n    <div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport Alert from './Alert.vue';\nimport leftNav from './leftNav.vue';\n\nexport default {\n  data: () => ({\n    addScenarioForm : [\n      {\n      scenarioname: '',\n      enabled: '',\n      description: '',\n      testcaseid: '',\n      },\n    ],\n    addStepForm: [\n      {\n        screenname: '',\n        name: '',\n        action: '',\n        value: '',\n        condition: '',\n        value1: '',\n        value2: '',\n        expectstring: '',\n        conditionexec: '',\n        skipflag: '',\n      },  \n    ],\n    flowname: '',\n    message: '',\n    showMessage: false,\n    count: 0,\n    maincount: 0,\n    submitCount: 0,\n    scenarioCount: 0,\n    stepSaveArray : {},\n    finalarraydata: {},\n    flowarray: {},\n    flowarray1: {},\n    arrayA: {},\n    arrayB: {},\n    arrayC: {},\n    scnamesArray: {},\n    scnames: [],\n    names1: [],\n  }),\n  components: {\n    alert: Alert,\n    leftNav: leftNav,\n  },\n  methods: {\n    // Fetch screen names\n    getScreenNames () {\n      let scnames = [];\n      let scnamesArray = {};\n      axios.get('screenname.json')\n        .then((response) => {\n          this.scnamesArray = response.data.screenname;\n          this.scnames = Object.keys(response.data.screenname);\n          console.log(this.scnames);\n        })\n        .catch((error) => {\n          // eslint-disable-next-line\n          console.error(error);\n      });  \n    },\n    // Fetch names based on screen names\n    getNames(namescreen, id) {\n      console.log('aaa');\n      let names1 = [];\n      Object.keys(this.scnamesArray).forEach((key) => {\n        console.log(key, namescreen);\n        if (key == namescreen) {\n          this.$set(this.names1, id, this.scnamesArray[key]);\n          console.log(this.names1);\n        }\n      });\n    },\n    // Add more conditions\n    addscenario(mcount) {\n      event.preventDefault();\n      console.log(mcount);\n      if (mcount == 0) {\n        this.maincount = mcount + 1;\n      }\n      if (mcount >= 1 && this.submitCount == this.maincount) {\n        this.maincount = mcount + 1;\n        console.log(this.maincount);\n        this.addScenarioForm.push({\n          scenarioname: '',\n          enabled: '',\n          description: '',\n          testcaseid: '',\n        });\n      }\n      \n    },\n    addmorerules(val) {\n      event.preventDefault();\n      const newval = parseInt(val, 10);\n      const val1 = val + 1;\n      this.addStepForm.push({\n        screenname: '',\n        name: '',\n        action: '',\n        value: '',\n        condition: '',\n        value1: '',\n        value2: '',\n        expectstring: '',\n        conditionexec: '',\n        skipflag: '',\n      });\n      this.count = val1;\n    },\n    // remove conditions\n    removerules(val,remid) {\n      event.preventDefault();\n      const sub = '#remcond';\n      const ifrules = '#ifrules';\n      if (val === 1) {\n       // document.querySelector(ifrules).style.display = 'none';\n       // document.querySelector(sub).style.display = 'none';\n      }\n      this.addStepForm.splice(remid, 1);\n      const val1 = val - 1;\n      this.count = val1;\n    },\n    // add new rules\n    addRules(payload) {\n      const path = 'http://localhost:5000/rules';\n      axios.post(path, payload)\n        .then(() => {\n          this.message = 'Rules Added Successfully';\n          this.showMessage = true;\n          window.scrollTo(0, 0);\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n    },\n    \n    // Initializing rules form\n    initForm() {\n      this.addStepForm[0].screenname = '';\n      this.addStepForm[0].name = '';\n      this.addStepForm[0].action = '';\n      this.addStepForm[0].value = '';\n      this.addStepForm[0].condition = '';\n      this.addStepForm[0].value1 = '';\n      this.addStepForm[0].value2 = '';\n      this.addStepForm[0].expectstring = '';\n      this.addStepForm[0].conditionexec = '';\n      this.addStepForm[0].skipflag = '';\n    },\n    submitSteps(evt) {\n      evt.preventDefault();\n      const steparray = this.addStepForm;\n      const scenarioArray = this.addScenarioForm;\n      const scenarioIndex = this.scenarioCount;\n      const stepCount = steparray.length;\n      console.log(steparray.length);\n      let formdata = {};\n      let arraydata = {};\n      let newarraydata = {};\n      \n      for (let i = 0; i < steparray.length; i += 1) {\n        let name1 = this.addStepForm[i].name;\n        let action1 = this.addStepForm[i].action;\n        let value1 = this.addStepForm[i].value;\n\n        formdata = {};\n        let steps = i+1;\n        formdata[steps] = {};\n        formdata[steps]['name'] = name1;\n        formdata[steps]['action'] = action1;\n        formdata[steps]['value'] = value1;\n        if (action1 == 'expect') {\n          formdata[steps]['condition'] = this.addStepForm[i].condition;\n          formdata[steps]['value1'] = this.addStepForm[i].value1;\n          formdata[steps]['value2'] = this.addStepForm[i].value2;\n          formdata[steps]['expect_string'] = this.addStepForm[i].expectstring;\n        }\n        if (action1 != 'expect' && this.addStepForm[i].conditionexec == 'enabled') {\n          formdata[steps]['cond_exec'] = this.addStepForm[i].conditionexec;\n        }\n        if (action1 != 'expect' && this.addStepForm[i].skipflag == 'enabled') {\n          formdata[steps]['skipflag'] = this.addStepForm[i].skipflag;\n        }\n        arraydata = Object.assign(arraydata, formdata);\n        //console.log(arraydata);\n      }\n      arraydata['stepcount'] = stepCount;\n      let scenarioname1 = this.addScenarioForm[scenarioIndex].scenarioname;\n      newarraydata[scenarioname1] = arraydata;\n      this.arrayA = Object.assign(this.arrayA, newarraydata);\n\n      let flowname1 = this.flowname;\n      let flowarrayIndex = this.maincount;\n      let flowarrayIndex1 = flowarrayIndex - 1;\n      let flowarray = {};\n     // flowarray[flowname1] = {};\n      flowarray[flowarrayIndex] = {};\n      flowarray[flowarrayIndex]['name'] = this.addScenarioForm[flowarrayIndex1].scenarioname;\n      flowarray[flowarrayIndex]['enabled'] = this.addScenarioForm[flowarrayIndex1].enabled;\n      flowarray[flowarrayIndex]['desc'] = this.addScenarioForm[flowarrayIndex1].description;\n      flowarray[flowarrayIndex]['testcase_id'] = this.addScenarioForm[flowarrayIndex1].testcaseid;\n\n      this.arrayB = Object.assign(this.arrayB, flowarray);\n      this.submitCount = this.submitCount + 1;\n      this.scenarioCount = this.scenarioCount + 1;\n\n      this.addStepForm.splice(1, stepCount);\n      /*\n      let j=0;\n      while (j < stepCount) {\n        this.addStepForm.splice(j, 1);\n        console.log(stepCount);\n        j=j+1;\n      }\n     for (let j = 1; j <= stepCount; j += 1) {\n        this.addStepForm.splice(j, 1);\n        console.log(stepCount);\n      } */\n      this.initForm();\n      console.log(arraydata);\n      console.log(newarraydata);\n      console.log(flowarray);\n      console.log(this.arrayA);\n      console.log(this.arrayB);\n    },\n    createFile() {\n      let completeArray = {};\n      this.arrayB['scenario_count'] = this.scenarioCount;\n      this.arrayC[this.flowname] = this.arrayB;\n      completeArray = Object.assign(this.arrayC, this.arrayA);\n      completeArray['filename'] = this.flowname;\n      console.log(completeArray);\n      const path = 'http://localhost:5001/createJson';\n      axios.post(path, completeArray)\n        .then((resp) => {\n          this.message = 'Scenario Added Successfully';\n          this.showMessage = true;\n          document.querySelector('#downloadLink').style.display = 'block';\n          document.querySelector('#downloadLink').innerHTML = resp.data;\n          window.scrollTo(0, 0);\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n    },\n    reloadPage(){\n      window.location.reload();\n    },\n  },\n  // city and operands are listed onload\n  created() {\n   this.getScreenNames();\n  },\n};\n</script>\n<style src=\"vue-multiselect/dist/vue-multiselect.min.css\"></style>\n<style scoped>\n#tj-datetime-input {\n    height: 38px;\n    min-width: 176px;\n}\n</style>\n"]}]}