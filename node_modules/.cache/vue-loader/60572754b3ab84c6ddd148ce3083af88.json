{"remainingRequest":"/Users/snithinnarayanan/Booking/client/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/snithinnarayanan/Booking/client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/snithinnarayanan/Booking/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/snithinnarayanan/Booking/client/src/components/rulesdisplay.vue?vue&type=template&id=4c667e7b&","dependencies":[{"path":"/Users/snithinnarayanan/Booking/client/src/components/rulesdisplay.vue","mtime":1582538018765},{"path":"/Users/snithinnarayanan/Booking/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/snithinnarayanan/Booking/client/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/snithinnarayanan/Booking/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/snithinnarayanan/Booking/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}