{"remainingRequest":"/Users/snithinnarayanan/testEngine/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/snithinnarayanan/testEngine/client/src/components/executor.vue?vue&type=style&index=1&id=4057b93a&scoped=true&lang=css&","dependencies":[{"path":"/Users/snithinnarayanan/testEngine/client/src/components/executor.vue","mtime":1593083409397},{"path":"/Users/snithinnarayanan/testEngine/client/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/snithinnarayanan/testEngine/client/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/snithinnarayanan/testEngine/client/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/snithinnarayanan/testEngine/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/snithinnarayanan/testEngine/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgojdGotZGF0ZXRpbWUtaW5wdXQgewogICAgaGVpZ2h0OiAzOHB4OwogICAgbWluLXdpZHRoOiAxNzZweDsKfQo="},{"version":3,"sources":["executor.vue"],"names":[],"mappingsilBA;AACA;AACA;AACA","file":"executor.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"container\" style=\"max-width:100%;padding:0px;height:100%;\">\n   <leftNav></leftNav>  <!-- Left side Navigation -->\n    <div class=\"row\"\n    style=\"margin-left: 280px;border-left: 18px solid #f8f9fa;\">\n      <div class=\"col-sm-10\" style=\"padding-left: 30px;max-width: 1270px;\">\n        <br>\n        <h4>Run Scenario</h4>\n        <hr>\n        <alert :message=message v-if=\"showMessage\"></alert>\n        <br><br>\n        <!-- Add Rules Form -->\n      <div>\n        <b-card no-body>\n          <b-tabs card>\n            <b-tab title=\"Run a scenario\" active>\n              <b-card-text>\n\n                <div class=\"addrules\">\n                  <b-form @submit=\"execscenario\" class=\"w-50\">\n\n                  <div style=\"display: -webkit-inline-box;margin-right: 20px;\n                    box-shadow: rgba(108, 117, 125, 0) 0px 0px 0px 5px inset;width:1200px;\n                    padding: 30px 10px 30px 30px;min-height: 30px;margin-bottom: 30px;background-color:#94989624;\">\n                    <b-form-group id=\"form-application-group\"\n                                label=\"Application:\"\n                                label-for=\"form-application-input\"\n                                style=\"margin-right: 20px;\">\n                      <b-form-select v-on:change=\"selectOS(application)\" v-model=\"application\"\n                        id=\"form-application-group1\" required>\n                        <option value=\"\" selected>Please Select Application</option>\n                        <option v-for=\"(app, index) in applications\" :key=\"index\" :value=app>\n                        {{app}}</option>\n                      <!--  <option value=\"parkjockey_web\">ParkJockey Web</option>\n                        <option value=\"parkjockey_hangtag\">ParkJockey Hangtag</option>\n                        <option value=\"tile\">Tile</option>\n                        <option value=\"parkjockey_web\">ParkJockey Web</option>  -->\n                    </b-form-select>\n                    </b-form-group>\n                    <b-form-group id=\"form-os-group\"\n                                label=\"OS:\"\n                                label-for=\"form-os-input\"\n                                style=\"margin-right: 20px;\">\n                      <b-form-select v-on:change=\"selectAppOS()\" v-model=\"os\"\n                        id=\"form-os-group1\" required>\n                      <option value=\"\" selected>Please Select OS</option>\n                      <option v-for=\"(os, ind) in oslist\" :key=\"ind\" :value=os>\n                        {{os}}</option>\n                      <!--   <option value=\"android\">Android</option>\n                        <option value=\"ios\">IOS</option>\n                      <option value=\"website\">Website</option>  -->\n                    </b-form-select>\n                    </b-form-group> \n                  </div>\n\n                    <div style=\"display: -webkit-inline-box;margin-right: 20px;\n                    box-shadow: rgba(108, 117, 125, 0) 0px 0px 0px 5px inset;width:1200px;\n                    padding: 30px 10px 30px 30px;min-height: 30px;margin-bottom: 30px;background-color:#94989624;\">\n                    <b-form-group id=\"form-flowname-group\"\n                                label=\"Flow Name:\"\n                                label-for=\"form-flowname-input\"\n                                style=\"margin-right: 20px;\">\n                      <b-form-select v-model=\"flowname\"\n                        id=\"form-application-group1\" required>\n                        <option value=\"\" :selected=\"true\">Please select Flowname</option>\n                        <option v-for=\"(flow, index) in flownames\" :key=\"index\" :value=flow>\n                        {{flow}}</option>\n                        </b-form-select>\n                    </b-form-group>\n                    <b-button-group style=\"display:-webkit-inline-box;width:700px;\">\n                      <b-button type=\"submit\" variant=\"primary\" \n                      style=\"width: 150px;margin-right: 30px;margin-top:30px;\">Exec Scenario</b-button>\n                    </b-button-group>\n                    </div>\n                    \n                          \n                    \n                  </b-form>\n                </div>\n\n              </b-card-text>\n            </b-tab>\n            <b-tab title=\"Create Test path\">\n              <b-card-text>\n\n                <div class=\"addrules\">\n                  <b-form @submit=\"execscenario\" class=\"w-50\">\n\n                  <div style=\"display: -webkit-inline-box;margin-right: 20px;\n                    box-shadow: rgba(108, 117, 125, 0) 0px 0px 0px 5px inset;width:1200px;\n                    padding: 30px 10px 30px 30px;min-height: 30px;margin-bottom: 30px;background-color:#94989624;\">\n                    <b-form-group id=\"form-application-group\"\n                                label=\"Application:\"\n                                label-for=\"form-application-input\"\n                                style=\"margin-right: 20px;\">\n                      <b-form-select v-on:change=\"selectOS(application)\" v-model=\"application\"\n                        id=\"form-application-group1\" required>\n                        <option value=\"\" selected>Please Select Application</option>\n                        <option v-for=\"(app, index) in applications\" :key=\"index\" :value=app>\n                        {{app}}</option>\n                      <!--  <option value=\"parkjockey_web\">ParkJockey Web</option>\n                        <option value=\"parkjockey_hangtag\">ParkJockey Hangtag</option>\n                        <option value=\"tile\">Tile</option>\n                        <option value=\"parkjockey_web\">ParkJockey Web</option>  -->\n                    </b-form-select>\n                    </b-form-group>\n                    <b-form-group id=\"form-os-group\"\n                                label=\"OS:\"\n                                label-for=\"form-os-input\"\n                                style=\"margin-right: 20px;\">\n                      <b-form-select v-on:change=\"selectAppOS()\" v-model=\"os\"\n                        id=\"form-os-group1\" required>\n                      <option value=\"\" selected>Please Select OS</option>\n                      <option v-for=\"(os, ind) in oslist\" :key=\"ind\" :value=os>\n                        {{os}}</option>\n                      <!--   <option value=\"android\">Android</option>\n                        <option value=\"ios\">IOS</option>\n                      <option value=\"website\">Website</option>  -->\n                    </b-form-select>\n                    </b-form-group> \n                  </div>\n\n                    <div v-if=\"drag == true\" id=\"draggScenario\" style=\"display: -webkit-inline-box;margin-right: 20px;\n                    box-shadow: rgba(108, 117, 125, 0) 0px 0px 0px 5px inset;width:1200px;\n                    padding: 30px 10px 30px 30px;min-height: 30px;margin-bottom: 30px;background-color:#94989624;\">\n                  <!--  <b-form-group id=\"form-flowname-group\"\n                                label=\"Flow Name:\"\n                                label-for=\"form-flowname-input\"\n                                style=\"margin-right: 20px;\">\n                      <b-form-select v-model=\"flowname\"\n                        id=\"form-application-group1\" required>\n                        <option value=\"\" :selected=\"true\">Please select Flowname</option>\n                        <option v-for=\"(flow, index) in flownames\" :key=\"index\" :value=flow>\n                        {{flow}}</option>\n                        </b-form-select>\n                    </b-form-group>  -->\n                    <div class=\"col-3\" style=\"margin-top: 15px;\">\n                      <h5>Scenario List</h5>\n                      <br>\n                      <draggable class=\"list-group\" :list=\"flownames\" group=\"people\" @change=\"log\">\n                        <div\n                          class=\"list-group-item\"\n                          v-for=\"(element, index) in flownames\"\n                          :key=\"index\"\n                          style=\"padding-top: 0.25rem;padding-bottom: 0.25rem;\"\n                        >\n                          {{ index+1 }}. {{ element }}\n                        </div>\n                      </draggable>\n                    </div>\n                    <!-- Mandatory rules list  -->\n                    <div class=\"col-3\" style=\"margin-top: 15px;\">\n                      <h5>Selected Scenarios</h5>\n                      <br>\n                      <draggable class=\"list-group\" :list=\"multipleFlownames\" group=\"people\" @change=\"log\">\n                        <div\n                          class=\"list-group-item\"\n                          v-for=\"(element, index) in multipleFlownames\"\n                          :key=\"index\"\n                          style=\"padding-top: 0.25rem;padding-bottom: 0.25rem;\"\n                        >\n                          {{ index+1 }}.{{ element }}\n                        </div>\n                        \n                      </draggable>\n                    </div>\n                    <b-button-group style=\"display:-webkit-inline-box;width:700px;\">\n                      <b-button type=\"submit\" variant=\"primary\" \n                      style=\"width: 150px;margin-right: 30px;margin-top:30px;\">Exec Scenario</b-button>\n                    </b-button-group>\n                    </div>\n                    \n                          \n                    \n                  </b-form>\n                </div> \n\n              </b-card-text>\n            </b-tab>\n          </b-tabs>\n        </b-card>\n      </div>\n      \n\n      <div  id=\"htmlresponse\" style=\"margin-right: 20px; display:none;\n        box-shadow: rgba(108, 117, 125, 0) 0px 0px 0px 5px inset;width:1200px;\n        padding: 30px 10px 30px 30px;min-height: 30px;margin-bottom: 30px;background-color:#94989624;\">\n      </div>\n      <div id=\"downloadresponse\" style=\"display:none;padding-bottom:30px;\"></div>\n\n      <div v-if=\"loading\">\n            <vue-simple-spinner size=\"88\" line-size=\"12\"></vue-simple-spinner>\n      </div>\n\n\n    </div>\n    \n    </div>\n    <div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport Alert from './Alert.vue';\nimport leftNav from './leftNav.vue';\nimport ClickConfirm from 'click-confirm';\nimport Spinner from 'vue-simple-spinner';\nimport draggable from 'vuedraggable';\n\nexport default {\n  data: () => ({\n    addScenarioForm : [\n      {\n      scenarioname: '',\n      enabled: '',\n      description: '',\n      testcaseid: '',\n      },\n    ],\n    addStepForm: [\n      {\n        screenname: '',\n        name: '',\n        action: '',\n        value: '',\n        condition: '',\n        value1: '',\n        value2: '',\n        expectstring: '',\n        conditionexec: '',\n        skipflag: '',\n      },  \n    ],\n    application: '',\n    os: '',\n    flowname: '',\n    message: '',\n    showMessage: false,\n    count: 0,\n    maincount: 0,\n    submitCount: 0,\n    scenarioCount: 0,\n    stepSaveArray : {},\n    finalarraydata: {},\n    flowarray: {},\n    flowarray1: {},\n    arrayA: {},\n    arrayB: {},\n    arrayC: {},\n    arrayD: {},\n    arrayE: {},\n    scnamesArray: {},\n    scnames: [],\n    names1: [],\n    values: [],\n    actionlist: [],\n    viewSceArray: '',\n    viewStepArray: '',\n    app: '',\n    osname: '',\n    flownames: '',\n    multipleFlownames: [],\n    loading: false,\n    applications: {},\n    oslist: {},\n    drag: false,\n  }),\n  name: \"priority\",\n  display: \"Priority\",\n  order: 1,\n  components: {\n    alert: Alert,\n    leftNav: leftNav,\n    clickConfirm: ClickConfirm,\n    'vue-simple-spinner': Spinner,\n    draggable,\n  },\n  methods: {\n    selectFlownames () {\n      const path = `http://localhost:5001/listscenarios/?app=${this.application}&os=${this.os}`;\n      console.log(path);\n      axios.get(path)\n        .then((res) => {\n          this.flownames = res.data;\n          console.log(this.flownames)\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n    },\n    execscenario(evt) {\n     // console.log(flowname);\n      evt.preventDefault();\n      let param1 = this.flowname;\n      console.log(param1);\n      console.log(this.multipleFlownames);\n      if (Array.isArray(this.multipleFlownames) && this.multipleFlownames.length > 0) {\n        param1 = this.multipleFlownames.join();\n        console.log(param1);\n      }\n      else {\n        console.log('empty array');\n      }\n      const path = `http://localhost:5001/execFlow/${param1}`;\n      console.log(path);\n      document.getElementById('htmlresponse').style.display = 'none';\n      this.loading = true\n      axios.get(path)\n        .then((res) => {\n        //  console.log(res);\n          console.log(res.data.html_response);\n          document.getElementById('htmlresponse').innerHTML = res.data.html_response;\n          document.getElementById('htmlresponse').style.display = 'block';\n          document.getElementById('downloadresponse').innerHTML = '<a href=\"http://localhost:5001/report\">Download Report</a>';\n          document.getElementById('downloadresponse').style.display = 'block';\n        })\n        .catch((error) => {\n          console.error(error);\n        })\n        .finally(() => (this.loading = false));\n    },\n    getApplication () {\n      const path = 'http://localhost:5001/application';\n      let applications = '';\n      let appResponse = '';\n      console.log('aaaa');\n      axios.get(path)\n        .then((res) => {\n          this.appResponse = res.data;\n          this.applications = Object.keys(res.data.application);\n          console.log(this.applications)\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n    },\n    selectOS (appName) {\n        this.drag = false;\n        this.buttonVisible = false;\n        Object.keys(this.appResponse.application).forEach((key) => {\n            if (key == appName) {\n                this.oslist = this.appResponse.application[key];\n                this.os = '';\n            }\n        });\n    },\n    selectAppOS (){\n      this.selectFlownames();\n      this.drag = true;\n    },\n    viewScenario(num, val) {\n      let viewSceArray = '';\n      let viewStepArray = '';\n      Object.keys(this.arrayA).forEach((key) => {\n        if (key == val) {\n          this.viewStepArray = this.arrayA[key];\n        }\n      });\n      Object.keys(this.arrayB).forEach((key1) => {\n        if (key1 == num) {\n          this.viewSceArray = this.arrayB[key1];\n        }\n      });\n      this.$refs.viewModal.show();\n    },\n    // Fetch screen names\n    getScreenNames (appname, osdetail) {\n      let scnames = [];\n      let scnamesArray = {};\n      let jsonScreennameFile = appname + \".json\";\n      axios.get(jsonScreennameFile)\n        .then((response) => {\n          this.scnamesArray = response.data[appname][osdetail].screenname;\n          this.scnames = Object.keys(response.data[appname][osdetail].screenname);\n          this.values = Object.values(response.data[appname].value);\n          this.actionlist = Object.values(response.data[appname].Action);\n          console.log(this.scnames);\n          console.log(this.values);\n          console.log(this.actionlist);\n        })\n        .catch((error) => {\n          // eslint-disable-next-line\n          console.error(error);\n      });  \n    },\n    // Fetch names based on screen names\n    getNames(namescreen, id) {\n      console.log('aaa');\n      let names1 = [];\n      Object.keys(this.scnamesArray).forEach((key) => {\n        console.log(key, namescreen);\n        if (key == namescreen) {\n          this.$set(this.names1, id, this.scnamesArray[key]);\n          console.log(this.names1);\n        }\n      });\n    },\n    // Add more conditions\n    addscenario(mcount) {\n      event.preventDefault();\n      console.log(mcount);\n      if (mcount == 0) {\n        this.maincount = mcount + 1;\n      }\n      if (mcount >= 1 && this.submitCount == this.maincount) {\n        this.maincount = mcount + 1;\n        console.log(this.maincount);\n        this.addScenarioForm.push({\n          scenarioname: '',\n          enabled: '',\n          description: '',\n          testcaseid: '',\n        });\n      }\n      \n    },\n    addmorerules(val) {\n      event.preventDefault();\n      const newval = parseInt(val, 10);\n      const val1 = val + 1;\n      this.addStepForm.push({\n        screenname: '',\n        name: '',\n        action: '',\n        value: '',\n        condition: '',\n        value1: '',\n        value2: '',\n        expectstring: '',\n        conditionexec: '',\n        skipflag: '',\n      });\n      this.count = val1;\n    },\n    // remove conditions\n    removerules(val,remid) {\n      event.preventDefault();\n      const sub = '#remcond';\n      const ifrules = '#ifrules';\n      if (val === 1) {\n       // document.querySelector(ifrules).style.display = 'none';\n       // document.querySelector(sub).style.display = 'none';\n      }\n      this.addStepForm.splice(remid, 1);\n      const val1 = val - 1;\n      this.count = val1;\n    },\n    \n    // Initializing rules form\n    initForm() {\n      this.addStepForm[0].screenname = '';\n      this.addStepForm[0].name = '';\n      this.addStepForm[0].action = '';\n      this.addStepForm[0].value = '';\n      this.addStepForm[0].condition = '';\n      this.addStepForm[0].value1 = '';\n      this.addStepForm[0].value2 = '';\n      this.addStepForm[0].expectstring = '';\n      this.addStepForm[0].conditionexec = '';\n      this.addStepForm[0].skipflag = '';\n    },\n    submitSteps(evt) {\n      evt.preventDefault();\n      const steparray = this.addStepForm;\n      const scenarioArray = this.addScenarioForm;\n      const scenarioIndex = this.scenarioCount;\n      const stepCount = steparray.length;\n      console.log(steparray.length);\n      let formdata = {};\n      let arraydata = {};\n      let newarraydata = {};\n      \n      for (let i = 0; i < steparray.length; i += 1) {\n        let screenname1 = this.addStepForm[i].screenname;\n        let name1 = this.addStepForm[i].name;\n        let action1 = this.addStepForm[i].action;\n        let value1 = this.addStepForm[i].value;\n\n        formdata = {};\n        let steps = i+1;\n        formdata[steps] = {};\n        formdata[steps]['screen_name'] = screenname1;\n        formdata[steps]['name'] = name1;\n        formdata[steps]['action'] = action1;\n        formdata[steps]['value'] = value1;\n        if (action1 == 'expect') {\n          formdata[steps]['condition'] = this.addStepForm[i].condition;\n          formdata[steps]['value1'] = this.addStepForm[i].value1;\n          formdata[steps]['value2'] = this.addStepForm[i].value2;\n          formdata[steps]['expect_string'] = this.addStepForm[i].expectstring;\n        }\n        if (action1 != 'expect' && this.addStepForm[i].conditionexec == 'enabled') {\n          formdata[steps]['cond_exec'] = this.addStepForm[i].conditionexec;\n        }\n        if (action1 != 'expect' && this.addStepForm[i].skipflag == 'enabled') {\n          formdata[steps]['skipflag'] = this.addStepForm[i].skipflag;\n        }\n        arraydata = Object.assign(arraydata, formdata);\n        console.log(arraydata);\n      }\n      //console.log(this.addScenarioForm[scenarioIndex].scenarioname);\n      arraydata['stepcount'] = stepCount;\n      let scenarioname1 = this.addScenarioForm[scenarioIndex].scenarioname;\n      newarraydata[scenarioname1] = arraydata;\n      this.arrayA = Object.assign(this.arrayA, newarraydata);\n\n      let flowname1 = this.flowname;\n      let flowarrayIndex = this.maincount;\n      let flowarrayIndex1 = flowarrayIndex - 1;\n      let flowarray = {};\n     // flowarray[flowname1] = {};\n      flowarray[flowarrayIndex] = {};\n      flowarray[flowarrayIndex]['name'] = this.addScenarioForm[flowarrayIndex1].scenarioname;\n      flowarray[flowarrayIndex]['enabled'] = this.addScenarioForm[flowarrayIndex1].enabled;\n      flowarray[flowarrayIndex]['desc'] = this.addScenarioForm[flowarrayIndex1].description;\n      flowarray[flowarrayIndex]['testcase_id'] = this.addScenarioForm[flowarrayIndex1].testcaseid;\n\n      this.arrayB = Object.assign(this.arrayB, flowarray);\n      this.submitCount = this.submitCount + 1;\n      this.scenarioCount = this.scenarioCount + 1;\n\n      document.querySelector('#form-application-group1').disabled = true;\n      document.querySelector('#form-os-group1').disabled = true;\n      this.addStepForm.splice(1, stepCount);\n      /*\n      let j=0;\n      while (j < stepCount) {\n        this.addStepForm.splice(j, 1);\n        console.log(stepCount);\n        j=j+1;\n      }\n     for (let j = 1; j <= stepCount; j += 1) {\n        this.addStepForm.splice(j, 1);\n        console.log(stepCount);\n      } */\n      this.initForm();\n      console.log(arraydata);\n      console.log(newarraydata);\n      console.log(flowarray);\n      console.log(this.arrayA);\n      console.log(this.arrayB);\n    },\n    trimSpace(a) {\n      return a.split(' ').join('');\n    },\n    createFile() {\n      let completeArray = {};\n      let jsonFileName = this.trimSpace(this.flowname);\n      this.arrayB['scenario_count'] = this.scenarioCount;\n      this.arrayC[this.flowname] = this.arrayB;\n      this.arrayD['steps'] = this.arrayA;\n      this.arrayE['scenarios'] = this.arrayC;\n      completeArray = Object.assign(this.arrayE, this.arrayD);\n      completeArray['filename'] = jsonFileName;\n     // console.log(completeArray);\n      if (Object.keys(this.arrayC).length != 0 && Object.keys(this.arrayA).length !=0) {\n        const path = 'http://localhost:5001/createJson';\n        axios.post(path, completeArray)\n          .then((resp) => {\n            this.message = 'Scenario Added Successfully';\n            this.showMessage = true;\n            document.querySelector('#downloadLink').style.display = 'block';\n            document.querySelector('#downloadLink').innerHTML = resp.data;\n            window.scrollTo(0, 0);\n          })\n          .catch((error) => {\n            console.log(error);\n          });\n      }\n      else {\n          this.message = 'Error !!!';\n          this.showMessage = true;\n      }     \n    },\n    reloadPage(){\n      window.location.reload();\n    },\n    log: function(evt) {\n      window.console.log(evt);\n    },\n  },\n  // city and operands are listed onload\n  created() {\n    this.getApplication();\n  //  this.selectFlownames();\n   // this.getScreenNames();\n  },\n};\n</script>\n<style src=\"vue-multiselect/dist/vue-multiselect.min.css\"></style>\n<style scoped>\n#tj-datetime-input {\n    height: 38px;\n    min-width: 176px;\n}\n</style>\n"]}]}