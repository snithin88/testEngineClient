{"remainingRequest":"/Users/snithinnarayanan/Booking/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/snithinnarayanan/Booking/client/src/components/addoperand.vue?vue&type=style&index=0&id=a0a759d0&scoped=true&lang=css&","dependencies":[{"path":"/Users/snithinnarayanan/Booking/client/src/components/addoperand.vue","mtime":1580548730594},{"path":"/Users/snithinnarayanan/Booking/client/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/snithinnarayanan/Booking/client/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/snithinnarayanan/Booking/client/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/snithinnarayanan/Booking/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/snithinnarayanan/Booking/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgpAbWVkaWEgKG1pbi13aWR0aDogNTc2cHgpIHsKICAubW9kYWwtZGlhbG9nIHsKICAgICAgbWF4LXdpZHRoOiA1MDBweCAhaW1wb3J0YW50OwogIH0KICAgICAgfQo="},{"version":3,"sources":["addoperand.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsOA;AACA;AACA;AACA;AACA","file":"addoperand.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-sm-10\">\n        <h1>Operand</h1>\n        <hr><br><br>\n        <alert :message=message v-if=\"showMessage\"></alert>\n        <button type=\"button\" class=\"btn btn-success btn-sm\"\n        v-b-modal.operand-modal>Add Operand</button>\n        <br><br>\n        <table class=\"table table-hover\">\n          <thead>\n            <tr>\n              <th scope=\"col\">Name</th>\n              <th scope=\"col\">List of Operator</th>\n              <th scope=\"col\">Type</th>\n              <th></th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr v-for=\"(operand, index) in operands\" :key=\"index\">\n              <td>{{ operands[index].name}}</td>\n              <td style=\"display: -webkit-inline-box;\">\n                <div style=\"width:70px;\" v-for=\"(opr, index1) in operators\" :key=\"index1\">\n                {{ operands[index].operator[index1]}}{{','}}</div></td>\n              <td>{{ operands[index].type }}</td>\n              <td>\n                <div class=\"btn-group\" role=\"group\">\n                  <button\n                          type=\"button\"\n                          class=\"btn btn-warning btn-sm\"\n                          v-b-modal.book-update-modal\n                          @click=\"editBook(book)\">\n                      Update\n                  </button>\n                  <button\n                          type=\"button\"\n                          class=\"btn btn-danger btn-sm\"\n                          @click=\"onDeleteBook(book)\">\n                      Delete\n                  </button>\n                </div>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    <b-modal ref=\"addOperandModal\"\n            id=\"operand-modal\"\n            title=\"Add a new opernad\"\n            hide-footer>\n      <b-form @submit=\"onSubmit\" @reset=\"onReset\" class=\"w-50\">\n      <b-form-group id=\"form-name-group\"\n                    label=\"Name:\"\n                    label-for=\"form-name-input\">\n          <b-form-input id=\"form-name-input\"\n                        type=\"text\"\n                        v-model=\"addOperandForm.name\"\n                        required\n                        placeholder=\"Enter name\">\n          </b-form-input>\n        </b-form-group>\n        <b-form-group label=\"Type:\"\n                      label-for=\"form-type-input\">\n            <b-form-select v-model=\"addOperandForm.type\" id=\"form-type-group\" required>\n            <option value=\"\" selected>Please select type</option>\n            <option value=\"transient\">Date</option>\n            <option value=\"recurring\">String</option>\n            <option value=\"events\">Time</option>\n            <option value=\"events\">DateTime</option>\n    </b-form-select>\n        </b-form-group>\n        <b-form-group id=\"form-operator-group\"\n                    label=\"operator:\"\n                    label-for=\"form-operator-input\"\n                    style=\"margin-right: 20px;width:300px;\">\n          <multiselect\n            v-model=\"addOperandForm.operator\"\n            :options=\"options\"\n            :multiple=\"true\"\n            style=\"max-height: 30px;width:380px;\">\n          </multiselect>\n        </b-form-group>\n        <b-button-group>\n          <b-button type=\"submit\" variant=\"primary\">Submit</b-button>\n          <b-button type=\"reset\" variant=\"danger\">Reset</b-button>\n        </b-button-group>\n      </b-form>\n    </b-modal>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport Multiselect from 'vue-multiselect';\nimport Alert from './Alert.vue';\n\n\nexport default {\n  data() {\n    return {\n      addOperandForm: {\n        name: '',\n        type: '',\n        operator: [],\n      },\n      operands: [],\n      operators: [],\n      options: ['inrange', 'equals'],\n      message: '',\n      showMessage: false,\n    };\n  },\n  components: {\n    alert: Alert,\n    Multiselect,\n  },\n  methods: {\n    getOperands() {\n      const path = 'operands.json';\n      this.operands = [];\n      this.operators = [];\n      //  const opr = 'operator';\n      axios.get(path)\n        .then((res) => {\n          this.operands = res.data.operands;\n          this.operators = res.data.operands[0].operator;\n          console.log(this.operands);\n          console.log(this.operators);\n        })\n        .catch((error) => {\n          // eslint-disable-next-line\n          console.error(error);\n        });\n    },\n    addOperand(payload) {\n      const path = 'operands.json';\n      axios.post(path, payload)\n        .then(() => {\n          this.getBooks();\n          this.message = 'Book added!';\n          this.showMessage = true;\n        })\n        .catch((error) => {\n          // eslint-disable-next-line\n          console.log(error);\n          this.getBooks();\n        });\n    },\n    initForm() {\n      this.addOperandForm.name = '';\n      this.addOperandForm.type = '';\n      this.addOperandForm.operator = '';\n    },\n    onSubmit(evt) {\n      evt.preventDefault();\n      this.$refs.addOperandModal.hide();\n      const payload = {\n        name: this.addOperandForm.name,\n        type: this.addOperandForm.type,\n        operator: this.addOperandForm.operator,\n      };\n      this.addOperand(payload);\n      this.initForm();\n    },\n    onReset(evt) {\n      evt.preventDefault();\n      this.$refs.addBookModal.hide();\n      this.initForm();\n    },\n    editBook(book) {\n      this.editForm = book;\n    },\n    onSubmitUpdate(evt) {\n      evt.preventDefault();\n      this.$refs.editBookModal.hide();\n      let read = false;\n      if (this.editForm.read[0]) read = true;\n      const payload = {\n        title: this.editForm.title,\n        author: this.editForm.author,\n        read,\n      };\n      this.updateBook(payload, this.editForm.id);\n    },\n    updateBook(payload, bookID) {\n      const path = `http://localhost:5000/books/${bookID}`;\n      axios.put(path, payload)\n        .then(() => {\n          this.getBooks();\n          this.message = 'Book updated!';\n          this.showMessage = true;\n        })\n        .catch((error) => {\n          // eslint-disable-next-line\n          console.error(error);\n          this.getBooks();\n        });\n    },\n    onResetUpdate(evt) {\n      evt.preventDefault();\n      this.$refs.editBookModal.hide();\n      this.initForm();\n      this.getBooks(); // why?\n    },\n    removeBook(bookID) {\n      const path = `http://localhost:5000/books/${bookID}`;\n      axios.delete(path)\n        .then(() => {\n          this.getBooks();\n          this.message = 'Book removed!';\n          this.showMessage = true;\n        })\n        .catch((error) => {\n          // eslint-disable-next-line\n          console.error(error);\n          this.getBooks();\n        });\n    },\n    onDeleteBook(book) {\n      this.removeBook(book.id);\n    },\n  },\n  created() {\n    this.getOperands();\n  },\n};\n</script>\n<style scoped>\n  @media (min-width: 576px) {\n    .modal-dialog {\n        max-width: 500px !important;\n    }\n        }\n</style>\n"]}]}