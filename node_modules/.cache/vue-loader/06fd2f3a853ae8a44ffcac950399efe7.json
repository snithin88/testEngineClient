{"remainingRequest":"/Users/snithinnarayanan/Booking/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/snithinnarayanan/Booking/client/src/components/chartsample.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/snithinnarayanan/Booking/client/src/components/chartsample.vue","mtime":1582747319436},{"path":"/Users/snithinnarayanan/Booking/client/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/snithinnarayanan/Booking/client/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/snithinnarayanan/Booking/client/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/snithinnarayanan/Booking/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/snithinnarayanan/Booking/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLnNtYWxsIHsKICBtYXgtd2lkdGg6IDYwMHB4OwogIG1hcmdpbjogIDE1MHB4IGF1dG87Cn0K"},{"version":3,"sources":["chartsample.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyGA;AACA;AACA;AACA","file":"chartsample.vue","sourceRoot":"src/components","sourcesContent":["<!--<template>\n    <charts :option=\"chartOptionsLine\" ></charts>\n</template>-->\n\n<!--<script>\n/*\nimport charts from 'vue-echarts-v3'\n// import ECharts.js modules manually to reduce bundle size\n//  import 'echarts/lib/chart/bar'\nimport 'echarts/lib/chart/line';\n// import 'echarts/lib/chart/pie'\n\nexport default {\ndata () {\nreturn {\n    loading: true,\n    chartOptionsLine: {\n  xAxis: {\n    data: [\n      \"Jan\",\n      \"Feb\",\n      \"Mar\",\n      \"Apr\",\n      \"May\",\n      \"Jun\",\n      \"Jul\",\n      \"Aug\",\n      \"Sep\",\n      \"Oct\",\n      \"Nov\",\n      \"Dec\"\n    ]\n  },\n  yAxis: {\n    type: \"value\"\n  },\n  series: [\n    {\n      type: \"line\",\n      data: [55, 72, 84, 48, 59, 62, 87, 75, 94, 101, 127, 118]\n    }\n  ],\n  title: {\n    text: \"Monthly Stock Prices\",\n    x: \"center\",\n    textStyle: {\n      fontSize: 24\n    }\n  },\n  color: [\"#127ac2\"]\n}\n}\n},\ncomponents: {\ncharts\n},\n} */\n</script> -->\n<template>\n  <div class=\"small\">\n    <line-chart :chart-data=\"datacollection\"></line-chart>\n    <button @click=\"fillData()\">Randomize</button>\n  </div>\n</template>\n\n<script>\n  import LineChart from './LineChart.js'\n\n  export default {\n    components: {\n      LineChart\n    },\n    data () {\n      return {\n        datacollection: null\n      }\n    },\n    mounted () {\n      this.fillData()\n    },\n    methods: {\n      fillData () {\n        this.datacollection = {\n          labels: [this.getRandomInt(), this.getRandomInt()],\n          datasets: [\n            {\n              label: 'Data One',\n              backgroundColor: '#f87979',\n              data: [this.getRandomInt(), this.getRandomInt()]\n            }, {\n              label: 'Data One',\n              backgroundColor: '#f87979',\n              data: [this.getRandomInt(), this.getRandomInt()]\n            }\n          ]\n        }\n      },\n      getRandomInt () {\n        return Math.floor(Math.random() * (50 - 5 + 1)) + 5\n      }\n    }\n  }\n</script>\n\n<style>\n  .small {\n    max-width: 600px;\n    margin:  150px auto;\n  }\n</style>"]}]}