{"remainingRequest":"/Users/snithinnarayanan/Booking/client/node_modules/babel-loader/lib/index.js!/Users/snithinnarayanan/Booking/client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/snithinnarayanan/Booking/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/snithinnarayanan/Booking/client/src/components/lotscostmodal.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/snithinnarayanan/Booking/client/src/components/lotscostmodal.vue","mtime":1580335764333},{"path":"/Users/snithinnarayanan/Booking/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/snithinnarayanan/Booking/client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/snithinnarayanan/Booking/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/snithinnarayanan/Booking/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["lotscostmodal.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-sm-10\">\n        <h1>Lot Cost Modal</h1>\n        <hr><br><br>\n        <alert :message=message v-if=\"showMessage\"></alert>\n        <br><br>\n        <c-modal ref=\"lotcostModal\"\n            id=\"lotcost-modal\"\n            title=\"Add a new lotcost\"\n            hide-footer>\n        <b-form @submit=\"onSubmit\" class=\"w-50\">\n        <b-form-group label=\"Lots:\"\n                    label-for=\"form-lots-input\">\n          <b-form-select\n          v-model=\"addlotcostForm.lots\"\n          v-on:change=\"lotpricingrules()\" id=\"form-lots-group\" required>\n          <option value=\"\" selected>Please select lots</option>\n          <option v-for=\"(lot, index) in lotss\" :key=\"index\" :value=lotcode[index]>\n            {{lot}}</option>\n    </b-form-select>\n        </b-form-group>\n        <b-form-group id=\"form-parameters-group\"\n                      label=\"Lot parameters:\"\n                      label-for=\"form-parameters-input\">\n            <b-form-select v-model=\"addlotcostForm.lotparameters\"\n            id=\"form-parameters-group\" required>\n            <option value=\"\" selected>Please select Lot parameters</option>\n            <option v-for=\"(lotparameter, index) in lotparameters\" :key=\"index\"\n            :value=lotparameter>\n            {{lotparameter}}</option>\n    </b-form-select>\n        </b-form-group>\n        <b-button-group>\n          <b-button type=\"submit\" variant=\"primary\">Submit</b-button>\n        </b-button-group>\n      </b-form>\n      </c-modal>\n      <br><br>\n      <br><br>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport Alert from './Alert.vue';\n\nexport default {\n  data() {\n    return {\n      lotss: [],\n      lotcode: [],\n      citycode: [],\n      lotparameters: [],\n      addlotcostForm: {\n        lots: '',\n        lotparameters: '',\n      },\n      message: '',\n      showMessage: false,\n    };\n  },\n  components: {\n    alert: Alert,\n  },\n  methods: {\n    lotpricingrules() {\n      this.lotparameters = [];\n      this.lotparametervalues = [];\n      const selectedLot = document.querySelector('#form-lots-group').value;\n      this.states = [];\n      this.addlotcostForm.lotparameters = '';\n      const lotlist = this.lotpricing;\n      Object.keys(lotlist).forEach((key) => {\n        const val = lotlist[key];\n        console.log(val);\n        console.log(key);\n        console.log(selectedLot);\n        if (key === selectedLot) {\n          Object.keys(val).forEach((key1) => {\n            const val2 = val[key1];\n            console.log(val2);\n            const selectpara = 'Cost Model';\n            console.log(selectpara);\n            console.log(typeof (selectpara));\n            if (selectpara === key1) {\n              const val3 = [];\n              const val4 = [];\n              Object.keys(val2).forEach((key2) => {\n                val3.push(key2);\n                val4.push(val2[key2]);\n              });\n              this.lotparameters = val3;\n              this.lotparametervalues = val4;\n              console.log(this.lotparameters);\n              console.log(this.lotparametervalues);\n            }\n          });\n        }\n      });\n    },\n    getlots() {\n      axios.all([\n        axios.get('http://localhost:5000/lotcost'),\n        axios.get('cities.json'),\n      ])\n        .then(axios.spread((lotcost, city) => {\n          //  console.log(lotcost.data);\n          //  console.log(city.data);\n          const cities = city.data;\n          const lots = Object.keys(lotcost.data);\n          //  console.log(lots);\n          this.lotss = [];\n          this.lotcode = [];\n          this.citycode = [];\n          const lot1 = [];\n          const lot2 = [];\n          const lot3 = [];\n          Object.keys(cities).forEach((key) => {\n            const val = Object.keys(cities[key]);\n            const len1 = val.length;\n            const len2 = lots.length;\n            for (let i = 0; i < len1; i += 1) {\n              const key1 = val[i];\n              const val1 = cities[key][key1];\n              //  console.log(key1);\n              for (let j = 0; j < len2; j += 1) {\n                const key2 = lots[j];\n                //  console.log(key2);\n                if (key1 === key2) {\n                  lot1.push(val1);\n                  lot2.push(key1);\n                  lot3.push(key);\n                }\n              }\n            }\n          });\n          this.lotss = lot1;\n          this.lotcode = lot2;\n          this.citycode = lot3;\n          this.lotpricing = lotcost.data;\n          console.log(this.lotss);\n        }));\n    },\n    timeCalc(timevalue, datevalue) {\n      let hours = Number(timevalue.match(/^(\\d+)/)[1]);\n      const minutes = Number(timevalue.match(/:(\\d+)/)[1]);\n      const AMPM = timevalue.match(/\\s(.*)$/)[1];\n      if (AMPM === 'PM' && hours < 12) hours += 12;\n      if (AMPM === 'AM' && hours === 12) hours -= 12;\n      let sHours = hours.toString();\n      let sMinutes = minutes.toString();\n      if (hours < 10) sHours = `0${sHours}`;\n      if (minutes < 10) sMinutes = `0${sMinutes}`;\n      const time1 = `${sHours}:${sMinutes}`;\n      const dateFromPicker = datevalue;\n      const timeFromPicker = time1;\n      const dateParts = dateFromPicker.split('-');\n      const timeParts = timeFromPicker.split(':');\n      console.log(datevalue);\n      console.log(time1);\n      const localDate = new Date(dateParts[2], dateParts[1] - 1,\n        dateParts[0], timeParts[0], timeParts[1]);\n      const timestamp = localDate.getTime();\n      console.log(localDate);\n      console.log(timestamp);\n      return timestamp;\n    },\n    getDuration() {\n      const fromdt = this.timeCalc(this.addlotcostForm.fromtime, this.addlotcostForm.fromdate);\n      const todt = this.timeCalc(this.addlotcostForm.totime, this.addlotcostForm.todate);\n      const hours = Math.floor(Math.abs(fromdt - todt) / 36e5);\n      return hours;\n    },\n    addlotcost(payload) {\n      const path = 'http://localhost:5000/lotcost';\n      axios.post(path, payload)\n        .then((resp) => {\n          this.message = resp.data;\n          this.showMessage = true;\n          window.scrollTo(0, 0);\n        })\n        .catch((error) => {\n          // eslint-disable-next-line\n          console.log(error);\n        });\n    },\n    initForm() {\n      this.addlotcostForm.country = '';\n      this.addlotcostForm.state = '';\n      this.addlotcostForm.city = '';\n      this.addlotcostForm.lots = '';\n      this.addlotcostForm.customertype = '';\n      this.addlotcostForm.vehicletype = '';\n      this.addlotcostForm.parkingtype = '';\n      this.addlotcostForm.fromdate = '';\n      this.addlotcostForm.fromtime = '';\n      this.addlotcostForm.todate = '';\n      this.addlotcostForm.totime = '';\n      this.addlotcostForm.stalls = '';\n    },\n    onSubmit(evt) {\n      evt.preventDefault();\n      // this.$refs.lotcostModal.hide();\n      const uid = Math.floor(Math.random() * 90000) + 10000;\n      let stallno = 1;\n      if (document.querySelector('#form-parkingtype-group').value === 'events') {\n        stallno = this.addlotcostForm.stalls;\n      }\n      const payload = {\n        lotcostingid: uid,\n        country: this.addlotcostForm.country,\n        state: this.addlotcostForm.state,\n        city: this.addlotcostForm.city,\n        lotid: this.addlotcostForm.lots.id,\n        lotname: this.addlotcostForm.lots.text,\n        customertype: this.addlotcostForm.customertype,\n        vehicletype: this.addlotcostForm.vehicletype,\n        parkingtype: this.addlotcostForm.parkingtype,\n        fromtimestamp: this.timeCalc(this.addlotcostForm.fromtime, this.addlotcostForm.fromdate),\n        totimestamp: this.timeCalc(this.addlotcostForm.totime, this.addlotcostForm.todate),\n        stalls: stallno,\n        duration: this.getDuration(),\n      };\n      console.log(payload);\n      this.addlotcost(payload);\n      this.initForm();\n    },\n  },\n  created() {\n    this.getlots();\n  },\n};\n</script>\n"],"sourceRoot":"src/components"}]}